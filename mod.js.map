{"version":3,"file":"mod.js","sources":["../node_modules/@stdlib/assert-has-own-property/lib/main.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\n\n\n// MAIN //\n\n/**\n* Tests if an object has an inherited property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has an inherited property\n*\n* @example\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'toString' );\n* // returns true\n*\n* @example\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'boop' );\n* // returns false\n*\n* @example\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'bap' );\n* // returns false\n*/\nfunction isInheritedProperty( value, property ) {\n\tif ( value === void 0 || value === null || hasOwnProp( value, property ) ) {\n\t\treturn false;\n\t}\n\tif ( typeof property === 'symbol' ) {\n\t\treturn property in Object( value );\n\t}\n\treturn ( String( property ) in Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInheritedProperty;\n"],"names":["has","Object","prototype","hasOwnProperty","isInheritedProperty","value","property","call","hasOwnProp","String"],"mappings":";;AAsBA,IAAIA,EAAMC,OAAOC,UAAUC,eCoC3B,SAASC,EAAqBC,EAAOC,GACpC,OAAKD,UDTN,SAAqBA,EAAOC,GAC3B,OACCD,SAKML,EAAIO,KAAMF,EAAOC,EACzB,CCC4CE,CAAYH,EAAOC,KAGrC,iBAAbA,EACJA,KAAYL,OAAQI,GAEnBI,OAAQH,KAAcL,OAAQI,GACxC"}